[{"/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/reportWebVitals.js":"1","/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/App.js":"2","/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/index.js":"3","/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/UpdateGolf.js":"4","/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/Golfs.js":"5","/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/played.js":"6"},{"size":362,"mtime":1608853694896,"results":"7","hashOfConfig":"8"},{"size":4755,"mtime":1609378397550,"results":"9","hashOfConfig":"8"},{"size":500,"mtime":1608853694896,"results":"10","hashOfConfig":"8"},{"size":1847,"mtime":1609376777800,"results":"11","hashOfConfig":"8"},{"size":1830,"mtime":1609364920326,"results":"12","hashOfConfig":"8"},{"size":872,"mtime":1609377575339,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10yxpha",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/reportWebVitals.js",[],"/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/App.js",["27","28"],"/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/index.js",[],"/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/UpdateGolf.js",["29"],"import { useRef } from 'react';\n\nexport default (props) => {\n    const nameInput = useRef(null);\n    const urlInput = useRef(null);\n    const scoreInput = useRef(null);\n    const locationInput = useRef(null);\n    const dateInput = useRef(null);\n    \n\n    const updateGolf = async (event) => {\n        event.preventDefault()\n        const url = urlInput.current.value;\n        const name = nameInput.current.value;\n        const score = scoreInput.current.value;\n        const location = locationInput.current.value;\n        const date = dateInput.current.value;\n        const body = JSON.stringify({name, url, score, location, date});\n        // console.log(body);\n       \n        try {\n            const response = await fetch(`http://localhost:3000/golfs/${props.id}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: body \n            })\n            const data = await response.json();\n            const filteredGolfs = props.golfs.filter(golf => golf._id !== data._id)\n            props.updateGolf([...filteredGolfs, data])\n        } catch (error){\n            console.log(error)\n        }\n    }\n    \n    \n    \n    return (\n        <form onSubmit={updateGolf}>\n         <label> UPDATE NAME: <input type=\"text\" name=\"name\" ref={nameInput} /><br/></label> \n         <label> UPDATE URL: <input type=\"text\" name=\"url\" ref={urlInput} /><br/></label> \n         <label> UPDATE SCORE: <input type=\"number\" name=\"score\" ref={scoreInput} /><br/></label>\n         <label> UPDATE LOCATION: <input type=\"text\" name=\"location\" ref={locationInput} /><br/></label>\n         <label> UPDATE DATE PLAYED: <input type=\"date\" name=\"location\" ref={dateInput} /></label>\n            <input type=\"submit\" value=\"Update Golf Course\"/> \n        </form>\n    )\n}\n\n","/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/Golfs.js",["30","31"],"/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/played.js",["32"],{"ruleId":"33","severity":1,"message":"34","line":63,"column":11,"nodeType":"35","messageId":"36","endLine":63,"endColumn":23},{"ruleId":"37","severity":1,"message":"38","line":151,"column":16,"nodeType":"39","messageId":"40","endLine":151,"endColumn":22},{"ruleId":"41","severity":1,"message":"42","line":3,"column":1,"nodeType":"43","endLine":49,"endColumn":2},{"ruleId":"33","severity":1,"message":"44","line":1,"column":18,"nodeType":"35","messageId":"36","endLine":1,"endColumn":26},{"ruleId":"41","severity":1,"message":"42","line":4,"column":1,"nodeType":"43","endLine":48,"endColumn":2},{"ruleId":"37","severity":1,"message":"45","line":9,"column":61,"nodeType":"46","messageId":"47","endLine":9,"endColumn":63},"no-unused-vars","'handleSubmit' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd"]