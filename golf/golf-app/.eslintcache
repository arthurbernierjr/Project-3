[{"/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/reportWebVitals.js":"1","/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/App.js":"2","/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/index.js":"3","/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/UpdateGolf.js":"4","/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/Golfs.js":"5","/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/played.js":"6","/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/IndivCourse.js":"7"},{"size":362,"mtime":1608853694896,"results":"8","hashOfConfig":"9"},{"size":3876,"mtime":1609713741961,"results":"10","hashOfConfig":"9"},{"size":548,"mtime":1609615829544,"results":"11","hashOfConfig":"9"},{"size":1847,"mtime":1609376777800,"results":"12","hashOfConfig":"9"},{"size":1830,"mtime":1609364920326,"results":"13","hashOfConfig":"9"},{"size":968,"mtime":1609619565866,"results":"14","hashOfConfig":"9"},{"size":1688,"mtime":1609713779095,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10yxpha",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/reportWebVitals.js",[],"/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/App.js",["32","33","34"],"/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/index.js",[],"/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/UpdateGolf.js",["35"],"import { useRef } from 'react';\n\nexport default (props) => {\n    const nameInput = useRef(null);\n    const urlInput = useRef(null);\n    const scoreInput = useRef(null);\n    const locationInput = useRef(null);\n    const dateInput = useRef(null);\n    \n\n    const updateGolf = async (event) => {\n        event.preventDefault()\n        const url = urlInput.current.value;\n        const name = nameInput.current.value;\n        const score = scoreInput.current.value;\n        const location = locationInput.current.value;\n        const date = dateInput.current.value;\n        const body = JSON.stringify({name, url, score, location, date});\n        // console.log(body);\n       \n        try {\n            const response = await fetch(`http://localhost:3000/golfs/${props.id}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: body \n            })\n            const data = await response.json();\n            const filteredGolfs = props.golfs.filter(golf => golf._id !== data._id)\n            props.updateGolf([...filteredGolfs, data])\n        } catch (error){\n            console.log(error)\n        }\n    }\n    \n    \n    \n    return (\n        <form onSubmit={updateGolf}>\n         <label> UPDATE NAME: <input type=\"text\" name=\"name\" ref={nameInput} /><br/></label> \n         <label> UPDATE URL: <input type=\"text\" name=\"url\" ref={urlInput} /><br/></label> \n         <label> UPDATE SCORE: <input type=\"number\" name=\"score\" ref={scoreInput} /><br/></label>\n         <label> UPDATE LOCATION: <input type=\"text\" name=\"location\" ref={locationInput} /><br/></label>\n         <label> UPDATE DATE PLAYED: <input type=\"date\" name=\"location\" ref={dateInput} /></label>\n            <input type=\"submit\" value=\"Update Golf Course\"/> \n        </form>\n    )\n}\n\n","/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/Golfs.js",["36","37"],"import { useRef, useState } from 'react';\n// import { use } from '../../golf-app-api/controllers/golfs';\n\nexport default (props) => {\n    const nameInput = useRef(null);\n    const urlInput = useRef(null);\n    const locationInput = useRef(null);\n    const scoreInput = useRef(null);\n    const dateInput = useRef(null);\n\n    const createGolf = async (event) => {\n        event.preventDefault()\n        const url = urlInput.current.value;\n        const name = nameInput.current.value;\n        const score = scoreInput.current.value;\n        const location = locationInput.current.value;\n        const date = dateInput.current.value;\n        const completed = false;\n        const body = JSON.stringify({name, url, score, location, completed, date});\n        event.currentTarget.reset();\n        try {\n            const response = await fetch('http://localhost:3000/golfs', {\n                method: 'POST',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: body \n            })\n            const data = await response.json();\n            props.updateGolfs([...props.golfs, data])\n        } catch (error){\n            console.log(error)\n        }\n    }\n    \n    \n    \n    return (\n        <form onSubmit={createGolf}>\n         <label>GOLF COURSE: <input type=\"text\" name=\"title\" ref={nameInput} /><br/></label> \n         <label>URL WEBSITE: <input type=\"text\" name=\"url\" ref={urlInput} /><br/></label> \n         <label>SCORE: <input type=\"number\" name=\"score\" ref={scoreInput} /><br/></label>\n         <label>LOCATION: <input type=\"text\" name=\"location\" ref={locationInput}/><br/></label>\n         <label>DATE PLAYED: <input type=\"date\" name=\"date\" ref={dateInput}/></label>\n            <input type=\"submit\" value=\"Create Bucket-List\"/> \n        </form>\n    )\n}","/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/played.js",["38"],"/Users/tylerkinnaird/SEIR/Project-3/golf/golf-app/src/IndivCourse.js",[],{"ruleId":"39","severity":1,"message":"40","line":5,"column":8,"nodeType":"41","messageId":"42","endLine":5,"endColumn":14},{"ruleId":"39","severity":1,"message":"43","line":62,"column":11,"nodeType":"41","messageId":"42","endLine":62,"endColumn":23},{"ruleId":"44","severity":1,"message":"45","line":126,"column":16,"nodeType":"46","messageId":"47","endLine":126,"endColumn":22},{"ruleId":"48","severity":1,"message":"49","line":3,"column":1,"nodeType":"50","endLine":49,"endColumn":2},{"ruleId":"39","severity":1,"message":"51","line":1,"column":18,"nodeType":"41","messageId":"42","endLine":1,"endColumn":26},{"ruleId":"48","severity":1,"message":"49","line":4,"column":1,"nodeType":"50","endLine":48,"endColumn":2},{"ruleId":"44","severity":1,"message":"52","line":10,"column":61,"nodeType":"53","messageId":"54","endLine":10,"endColumn":63},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'handleSubmit' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd"]